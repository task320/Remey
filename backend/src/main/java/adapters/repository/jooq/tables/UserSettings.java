/*
 * This file is generated by jOOQ.
 */
package adapters.repository.jooq.tables;


import adapters.repository.jooq.Indexes;
import adapters.repository.jooq.Keys;
import adapters.repository.jooq.Remey;
import adapters.repository.jooq.tables.records.UserSettingsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSettings extends TableImpl<UserSettingsRecord> {

    private static final long serialVersionUID = 558417858;

    /**
     * The reference instance of <code>remey.user_settings</code>
     */
    public static final UserSettings USER_SETTINGS = new UserSettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSettingsRecord> getRecordType() {
        return UserSettingsRecord.class;
    }

    /**
     * The column <code>remey.user_settings.users_id</code>.
     */
    public final TableField<UserSettingsRecord, Integer> USERS_ID = createField("users_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>remey.user_settings.init_savings</code>.
     */
    public final TableField<UserSettingsRecord, Long> INIT_SAVINGS = createField("init_savings", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>remey.user_settings.update_at</code>.
     */
    public final TableField<UserSettingsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>remey.user_settings</code> table reference
     */
    public UserSettings() {
        this(DSL.name("user_settings"), null);
    }

    /**
     * Create an aliased <code>remey.user_settings</code> table reference
     */
    public UserSettings(String alias) {
        this(DSL.name(alias), USER_SETTINGS);
    }

    /**
     * Create an aliased <code>remey.user_settings</code> table reference
     */
    public UserSettings(Name alias) {
        this(alias, USER_SETTINGS);
    }

    private UserSettings(Name alias, Table<UserSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSettings(Name alias, Table<UserSettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserSettings(Table<O> child, ForeignKey<O, UserSettingsRecord> key) {
        super(child, key, USER_SETTINGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remey.REMEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_SETTINGS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserSettingsRecord> getPrimaryKey() {
        return Keys.USER_SETTINGS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserSettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSettingsRecord>>asList(Keys.USER_SETTINGS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserSettingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserSettingsRecord, ?>>asList(Keys.USER_SETTINGS__USER_SETTINGS_USERS_ID_FKEY);
    }

    public Users users() {
        return new Users(this, Keys.USER_SETTINGS__USER_SETTINGS_USERS_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSettings as(String alias) {
        return new UserSettings(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSettings as(Name alias) {
        return new UserSettings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSettings rename(String name) {
        return new UserSettings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSettings rename(Name name) {
        return new UserSettings(name, null);
    }
}
