/*
 * This file is generated by jOOQ.
*/
package org.thoughts.on.java.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.thoughts.on.java.db.Indexes;
import org.thoughts.on.java.db.Keys;
import org.thoughts.on.java.db.Remey;
import org.thoughts.on.java.db.tables.records.ShoppingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shopping extends TableImpl<ShoppingRecord> {

    private static final long serialVersionUID = 1904529764;

    /**
     * The reference instance of <code>remey.shopping</code>
     */
    public static final Shopping SHOPPING = new Shopping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShoppingRecord> getRecordType() {
        return ShoppingRecord.class;
    }

    /**
     * The column <code>remey.shopping.id</code>.
     */
    public final TableField<ShoppingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('shopping_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>remey.shopping.users_id</code>.
     */
    public final TableField<ShoppingRecord, String> USERS_ID = createField("users_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>remey.shopping.amount</code>.
     */
    public final TableField<ShoppingRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>remey.shopping.shopping_at</code>.
     */
    public final TableField<ShoppingRecord, Timestamp> SHOPPING_AT = createField("shopping_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>remey.shopping.create_at</code>.
     */
    public final TableField<ShoppingRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>remey.shopping.update_at</code>.
     */
    public final TableField<ShoppingRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>remey.shopping</code> table reference
     */
    public Shopping() {
        this(DSL.name("shopping"), null);
    }

    /**
     * Create an aliased <code>remey.shopping</code> table reference
     */
    public Shopping(String alias) {
        this(DSL.name(alias), SHOPPING);
    }

    /**
     * Create an aliased <code>remey.shopping</code> table reference
     */
    public Shopping(Name alias) {
        this(alias, SHOPPING);
    }

    private Shopping(Name alias, Table<ShoppingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Shopping(Name alias, Table<ShoppingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Remey.REMEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOPPING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShoppingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShoppingRecord> getPrimaryKey() {
        return Keys.SHOPPING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShoppingRecord>> getKeys() {
        return Arrays.<UniqueKey<ShoppingRecord>>asList(Keys.SHOPPING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ShoppingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShoppingRecord, ?>>asList(Keys.SHOPPING__SHOPPING_USERS_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Shopping as(String alias) {
        return new Shopping(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Shopping as(Name alias) {
        return new Shopping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Shopping rename(String name) {
        return new Shopping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Shopping rename(Name name) {
        return new Shopping(name, null);
    }
}
